security:
    password_hashers:
        App\Entity\User: 
            algorithm: auto

    providers:
        app_user_provider: 
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        login: 
            pattern: ^/api/login_check
            stateless: true
            provider: app_user_provider
            json_login: 
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api: 
            pattern: ^/api
            stateless: true
            jwt: ~

        logout:
            pattern:  ^/api/logout
            stateless: true

    access_control:
        - {path: ^/api/login_check, roles: PUBLIC_ACCESS}
        - {path: ^/api/user/create$, roles: PUBLIC_ACCESS}
        - {path: ^/api/admin, roles: ROLE_ADMIN}
        - {path: ^/api/coach, roles: ROLE_COACH}
        - {path: ^/api, roles: IS_AUTHENTICATED_FULLY}


